/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ABMProducto.java
 *
 * Created on 28/05/2009, 09:53:54 PM
 */
package vista;

import javax.swing.JOptionPane;
import controlador.ControladorProductos;
import modelo.Productos;

/**
 *
 * @author gustavo
 */
public class VentanaAbmProducto extends javax.swing.JInternalFrame {

    private ControladorProductos controladorProducto;
    private boolean recuperadoBD;

    /** Creates new form ABMProducto */
    public VentanaAbmProducto() {
        this.initComponents();

        try {
            controladorProducto = new ControladorProductos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Error al inciar el motor de persistencia\n ["
                    + e.getMessage() + "]");
            this.dispose();
        }
        this.recuperadoBD = false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        codigoLabel = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        nombreLabel = new javax.swing.JLabel();
        descripcion = new javax.swing.JTextField();
        precioLabel = new javax.swing.JLabel();
        existenciaLabel = new javax.swing.JLabel();
        guardar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        precio = new javax.swing.JTextField();
        existencia = new javax.swing.JTextField();

        setClosable(true);
        setTitle("ABM Producto");

        codigoLabel.setText("Código:");

        codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                codigoFocusLost(evt);
            }
        });
        codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoKeyTyped(evt);
            }
        });

        nombreLabel.setText("Descripción:");

        descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descripcionKeyTyped(evt);
            }
        });

        precioLabel.setText("Precio:");

        existenciaLabel.setText("Existencia:");

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        borrar.setText("Borrar");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precioKeyTyped(evt);
            }
        });

        existencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                existenciaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(precioLabel)
                    .addComponent(nombreLabel)
                    .addComponent(codigoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(existenciaLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(existencia, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(guardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(borrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelar)))
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoLabel)
                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER, false)
                    .addComponent(existencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existenciaLabel)
                    .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(precioLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cancelar)
                    .addComponent(borrar)
                    .addComponent(guardar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        if (codigo.getText() == null || codigo.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "El código no puede ser nulo");
            codigo.requestFocus();
            return;
        } else if (descripcion.getText() == null
                || descripcion.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "La descripcion no puede ser nula");
            descripcion.requestFocus();
            return;
        } else if (precio.getText() == null
                || precio.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "El precio no puede ser nulo");
            precio.requestFocus();
            return;
        } else if (Double.parseDouble(precio.getText()) <= 0.0) {
            JOptionPane.showMessageDialog(this, "El precio no puede ser "
                    + "menor o igual a cero");
            precio.requestFocus();
            return;
        } else if (existencia.getText() == null
                || existencia.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "La existencia no puede ser "
                    + "nula");
            existencia.requestFocus();
            return;
        } else if (Integer.parseInt(existencia.getText()) < 0) {
            JOptionPane.showMessageDialog(this, "La existencia no puede ser "
                    + "menor a cero");
            existencia.requestFocus();
            return;
        }

        try {
            Productos producto = new Productos();
            producto.setId(Integer.parseInt(codigo.getText().trim()));
            producto.setDescripcion(descripcion.getText().trim());
            producto.setCantidad(Integer.parseInt(existencia.getText().trim()));
            producto.setPrecio(Integer.parseInt(precio.getText().trim()));
            controladorProducto.insertar(producto);
            JOptionPane.showMessageDialog(this, "Producto guardado exitosamente");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error del sistema: ["
                    + e.getMessage() + "]");
        }
        this.cancelarActionPerformed(evt);
    }//GEN-LAST:event_guardarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        codigo.setText("");
        codigo.setEditable(true);
        descripcion.setText("");
        precio.setText("");
        existencia.setText("");
        recuperadoBD = false;
        codigo.requestFocus();
    }//GEN-LAST:event_cancelarActionPerformed
    private void codigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codigoFocusLost
        if (this.recuperadoBD == false ) {
            try {
                Productos p = controladorProducto.mostrar(Integer.parseInt(this.codigo.getText()));
                // puede que el objeto no esté sincronizado con la bd
                if (p != null) {
                    codigo.setText(Integer.toString(p.getId()));
                    codigo.setEditable(false);
                    descripcion.setText(p.getDescripcion());
                    precio.setText(p.getPrecio().toString());
                    existencia.setText(Integer.toString(p.getCantidad()));
                    this.recuperadoBD = true;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error del sistema: ["
                        + e.getMessage() + "]");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_codigoFocusLost

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        if (recuperadoBD == true) {
            int r = JOptionPane.showConfirmDialog(this, "Esta seguro de "
                    + "borrar los datos", "Mensaje", JOptionPane.YES_NO_OPTION);
            if (r == JOptionPane.NO_OPTION) {
                return;
            }

            try {
                Productos producto = new Productos();
                producto.setId(Integer.parseInt(codigo.getText()));
                controladorProducto.eliminar(producto.getId());
                JOptionPane.showMessageDialog(this, "Producto eliminado exitosamente");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error del sistema: ["
                        + e.getMessage() + "]");
            }
        }
        this.cancelarActionPerformed(evt);
    }//GEN-LAST:event_borrarActionPerformed
    private void precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioKeyTyped
        String text = precio.getText();
        if ((!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '.')
                || (evt.getKeyChar() == '.' && text != null
                && text.contains("."))) {
            evt.consume();
        }
    }//GEN-LAST:event_precioKeyTyped

    private void codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoKeyTyped
        String text = codigo.getText();
        if (text != null && text.length() >= 10) {
            if (text.length() > 10) {
                codigo.setText(text.substring(0, 10));
            }
            evt.consume();
        }
    }//GEN-LAST:event_codigoKeyTyped

    private void descripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionKeyTyped
        String text = descripcion.getText();
        if (text != null && text.length() >= 50) {
            if (text.length() > 50) {
                descripcion.setText(text.substring(0, 50));
            }
            evt.consume();
        }
    }//GEN-LAST:event_descripcionKeyTyped

    private void existenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_existenciaKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_existenciaKeyTyped
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrar;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField codigo;
    private javax.swing.JLabel codigoLabel;
    private javax.swing.JTextField descripcion;
    private javax.swing.JTextField existencia;
    private javax.swing.JLabel existenciaLabel;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JTextField precio;
    private javax.swing.JLabel precioLabel;
    // End of variables declaration//GEN-END:variables
}
